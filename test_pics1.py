from __future__ import (
        absolute_import, division, print_function, unicode_literals)
import six

import sys
import multiworm

known_good = set([31061, 25334, 25335, 15832, 56015, 57607, 20171, 17366, 47060, 1655, 7866, 2924, 308, 1776, 1099, 2, 5, 1535, 1780, 5445, 4253, 7983, 11324, 10566, 11198, 8249, 10244, 11540, 76532, 19512, 62586, 80762, 4254, 29818, 19521, 84826, 16854, 71114, 10477, 15314, 62706, 56137, 56133, 58718, 57608, 78454, 30917, 55929, 13286, 16735, 58719, 36238, 39598, 16855, 10470, 77311, 22344, 63239, 56257, 44965, 35442, 28947, 55928, 64153, 35415, 56016, 33416, 18420, 45592, 1775, 5911, 102, 5826, 5861, 2617, 21852, 28946, 29280, 10, 12155, 12760, 11507, 11538, 5821, 12702, 12644, 12259, 12960, 13051, 1045, 13099, 12759, 11508, 9241, 17427, 17428, 17677, 54594, 36239, 355, 8715, 1642, 17605, 20170, 31250, 15010, 31470, 16450, 26041, 13260, 32008, 59645, 71115, 77725, 1307, 18, 49420, 33429, 71323, 17365, 15865, 16847, 17589, 31060, 14954, 77591, 18636, 28564, 16247, 59413, 72830, 79588, 14965, 17501, 35423, 80763, 16273, 17367, 13, 17500, 1, 24, 117, 73, 72, 267, 63, 8, 74, 369, 12, 56, 126, 236, 23, 491, 30, 419, 29, 38112, 30918, 1295, 52636, 19963, 12920, 420, 4, 3, 974, 1246, 5827, 24676, 33454, 16048, 47108, 13178, 11279, 13972, 14623, 13798, 14582, 223, 13487, 13354, 15011, 14027, 13973, 14735, 14957, 15382, 56258, 17678, 29819, 16919, 12881, 12919, 11047, 1308, 12882, 13360, 13151, 14068, 10582, 15495, 13287, 49, 15467, 14966, 16061, 4391, 15867, 4687, 11731, 15582, 6418, 232, 16197, 14212, 15886, 16179, 4239, 15901, 12547, 16274, 16451, 15464, 15924, 9539, 17005, 15584, 4499, 17245, 15583, 16069, 16248, 27931, 3124, 734, 4297, 2299, 1142, 4259, 1880, 97, 4500, 4686, 1046, 15234, 13261, 15532, 16145])

def main():
    plate = multiworm.Experiment('/home/projects/worm_movement/Data/MWT_RawData/20130702_135704')
    plate.add_summary_filter(multiworm.filters.summary_lifetime_minimum(int(sys.argv[1])))
    plate.load_summary()

    crude_set = set(k for k in six.iterkeys(plate.bs_mapping))

    print('Crude blobs from filtered summary :', len(crude_set))
    print('Known good blobs (from Mongo)     :', len(known_good))
    print('Known good blobs & found blobs    :', len(known_good & crude_set))

    missing = known_good - crude_set
    print('Blobs missing                     :', len(missing))
    print(known_good - crude_set)

if __name__ == '__main__':
    sys.exit(main())